digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x784db10 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %x = alloca i32, align 4\l  %y = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  %0 = load i32, i32* @temp, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x784db10:s0 -> Node0x786a580;
	Node0x784db10:s1 -> Node0x786a5d0;
	Node0x786a580 [shape=record,label="{if.then:                                          \l  store i32 1, i32* %x, align 4\l  br label %if.end\l}"];
	Node0x786a580 -> Node0x786a620;
	Node0x786a5d0 [shape=record,label="{if.else:                                          \l  store i32 2, i32* %x, align 4\l  br label %if.end\l}"];
	Node0x786a5d0 -> Node0x786a620;
	Node0x786a620 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x786a620 -> Node0x7868c10;
	Node0x7868c10 [shape=record,label="{while.cond:                                       \l  %1 = load i32, i32* @temp, align 4\l  %cmp1 = icmp eq i32 %1, 0\l  br i1 %cmp1, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x7868c10:s0 -> Node0x7868c60;
	Node0x7868c10:s1 -> Node0x7868cb0;
	Node0x7868c60 [shape=record,label="{while.body:                                       \l  %2 = load i32, i32* @temp, align 4\l  %inc = add nsw i32 %2, 1\l  store i32 %inc, i32* @temp, align 4\l  br label %while.cond\l}"];
	Node0x7868c60 -> Node0x7868c10;
	Node0x7868cb0 [shape=record,label="{while.end:                                        \l  %3 = load i32, i32* %x, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4\l... x i8]* @.str, i32 0, i32 0), i32 %3)\l  store i32 0, i32* %y, align 4\l  %4 = load i32, i32* @temp, align 4\l  %cmp2 = icmp eq i32 %4, 1\l  br i1 %cmp2, label %if.then3, label %if.else4\l|{<s0>T|<s1>F}}"];
	Node0x7868cb0:s0 -> Node0x7868d00;
	Node0x7868cb0:s1 -> Node0x7868d50;
	Node0x7868d00 [shape=record,label="{if.then3:                                         \l  store i32 1, i32* %y, align 4\l  br label %if.end5\l}"];
	Node0x7868d00 -> Node0x7868da0;
	Node0x7868d50 [shape=record,label="{if.else4:                                         \l  store i32 2, i32* %y, align 4\l  br label %if.end5\l}"];
	Node0x7868d50 -> Node0x7868da0;
	Node0x7868da0 [shape=record,label="{if.end5:                                          \l  ret i32 0\l}"];
}
